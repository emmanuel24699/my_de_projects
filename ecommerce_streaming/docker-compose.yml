services:
  postgres:
    image: postgres:16
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d ecommerce"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce_network

  spark:
    build:
      context: .
      dockerfile: Dockerfile
    user: "1000:1000"
    env_file:
      - .env
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "4041:4040"
    volumes:
      - ./data:/data
      - ./scripts:/scripts
      - ./logs:/logs
      - ./config:/config
    command: >
      bash -c "
        /opt/bitnami/spark/bin/spark-submit --master local[*] /scripts/spark_streaming_to_postgres.py &
        tail -f /logs/spark_streaming.log
      "
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecommerce_network

networks:
  ecommerce_network:
    driver: bridge

volumes:
  postgres_data:
